## 4. 常见问题和解决方法

### 问题 1: 前端依赖安装失败

如果您遇到前端依赖安装失败的问题，可能是因为 npm 依赖冲突。错误信息可能如下：

```
npm ERR! code ERESOLVE
npm ERR! ERESOLVE could not resolve
...
npm ERR! Fix the upstream dependency conflict, or retry
npm ERR! this command with --force, or --legacy-peer-deps
```

解决方法：

1. 修改 `docker-compose.yml` 文件中的前端服务配置，添加 `--legacy-peer-deps` 选项：

```yaml
command: bash -c "npm install --legacy-peer-deps && npm run serve"
```

2. 或者手动进入容器安装依赖：

```bash
# 进入前端容器
docker exec -it simpletrade-frontend bash

# 安装依赖
npm install --legacy-peer-deps

# 启动前端服务
npm run serve
```

### 问题 2: API 服务缺少图形库依赖

如果您遇到类似下面的错误：

```
Failed to load global main_engine: libEGL.so.1: cannot open shared object file: No such file or directory
```

解决方法：

在 `Dockerfile` 中添加必要的图形库依赖：

```dockerfile
RUN apt-get update && apt-get install -y \
    build-essential \
    wget \
    netcat-openbsd \
    libegl1 \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*
```

### 问题 3: 权限问题

如果您遇到权限问题，可能是因为 Docker 容器内的用户与主机用户不同。尝试以下解决方法：

```bash
# 在主机上更改文件权限
chmod -R 777 /path/to/simpletrade
```

### 问题 4: 端口冲突

如果您遇到端口冲突问题，可能是因为端口已被其他应用程序占用。尝试以下解决方法：

```bash
# 查找占用端口的进程
lsof -i :8003

# 终止进程
kill -9 <PID>
```

或者修改 `docker-compose.yml` 文件中的端口映射：

```yaml
ports:
  - "8004:8003"  # 将主机端口从 8003 改为 8004
```

### 问题 5: 数据库初始化问题

如果您需要重置数据库并重新初始化，可以尝试以下方法：

```bash
# 停止容器
docker-compose down

# 删除卷
docker volume rm simpletrade_mysql-data

# 重新启动容器
docker-compose up
```

## 结论

使用 Docker 进行开发可以确保在不同机器上有一致的开发体验，避免"在我的机器上能运行"的问题。通过本指南中的步骤，您可以在 M4 Mac 和 Intel Mac 上设置相同的开发环境，并使用相同的工作流进行开发。

如果您遇到任何问题，请参考"常见问题和解决方法"部分，或者查阅 [Docker 官方文档](https://docs.docker.com/)。
